name: Auto-Rerun Jupyter Notebook and Log to wandb

on:
  push:
    paths:
      - '**/*.ipynb'  # Trigger when a Jupyter Notebook file is modified
      - '**/*.py'     # Trigger when a Python file is modified
  workflow_dispatch:  # Allows manual triggers

jobs:
  rerun-notebook:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up pyenv and install Python 3.12.0
      - name: Install pyenv and Python 3.12.0
        run: |
          sudo apt-get update
          sudo apt-get install -y make build-essential libssl-dev zlib1g-dev \
            libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
            libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev \
            python3-openssl git
          curl https://pyenv.run | bash
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $GITHUB_ENV
          echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $GITHUB_ENV
          eval "$(pyenv init --path)"
          pyenv install 3.12.0
          pyenv global 3.12.0
          python --version  # Verify installation

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install jupyter nbconvert wandb

      # Step 4: Set up wandb Authentication
      - name: Authenticate with wandb
        run: echo "WANDB_API_KEY=${{ secrets.WANDB }}" >> $GITHUB_ENV
        env:
          WANDB_API_KEY: ${{ secrets.WANDB }}

      # Step 5: Execute Jupyter Notebooks
      - name: Execute Notebook and Log to wandb
        run: |
          export PATH="$HOME/.pyenv/bin:$PATH"
          eval "$(pyenv init --path)"
          for notebook in $(git diff --name-only HEAD^ HEAD | grep -E "\.ipynb$")
          do
            echo "Processing $notebook"
            jupyter nbconvert --to notebook --execute "$notebook" --inplace || exit 1
          done

      # Step 6: Push Changes Back to Repo
      - name: Push Updated Notebooks
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add **/*.ipynb
          git commit -m "Update executed notebook outputs [CI Skip]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
